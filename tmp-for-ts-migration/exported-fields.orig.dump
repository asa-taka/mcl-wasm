{
  BN254: 0,
  BN381_1: 1,
  BN381_2: 2,
  BN462: 3,
  BN_SNARK1: 4,
  BLS12_381: 5,
  SECP224K1: 101,
  SECP256K1: 102,
  SECP384R1: 103,
  NIST_P192: 105,
  NIST_P224: 106,
  NIST_P256: 107,
  IRTF: 5,
  EC_PROJ: 1024,
  init: [AsyncFunction (anonymous)],
  curveType: 0,
  getRandomValues: [Function: getRandomValues],
  mod: <ref *1> {
    cryptoGetRandomValues: [Function: _cryptoGetRandomValues],
    ready: Promise { [Circular *1] },
    inspect: [Function (anonymous)],
    preloadedImages: {},
    preloadedAudios: {},
    ___wasm_call_ctors: [Function (anonymous)],
    _mclBnMalloc: [Function (anonymous)],
    _mclBnFree: [Function (anonymous)],
    _mclBn_getVersion: [Function (anonymous)],
    _mclBn_init: [Function: 408],
    _mclBn_getCurveType: [Function (anonymous)],
    _mclBn_getOpUnitSize: [Function (anonymous)],
    _mclBn_getG1ByteSize: [Function (anonymous)],
    _mclBn_getFpByteSize: [Function (anonymous)],
    _mclBn_getFrByteSize: [Function (anonymous)],
    _mclBn_getCurveOrder: [Function (anonymous)],
    _mclBn_getFieldOrder: [Function (anonymous)],
    _mclBn_setETHserialization: [Function (anonymous)],
    _mclBn_getETHserialization: [Function (anonymous)],
    _mclBn_setMapToMode: [Function (anonymous)],
    _mclBnFr_clear: [Function (anonymous)],
    _mclBnFr_setInt: [Function (anonymous)],
    _mclBnFr_setInt32: [Function (anonymous)],
    _mclBnFr_setStr: [Function (anonymous)],
    _mclBnFr_setLittleEndian: [Function (anonymous)],
    _mclBnFr_setBigEndianMod: [Function (anonymous)],
    _mclBnFr_getLittleEndian: [Function (anonymous)],
    _mclBnFr_setLittleEndianMod: [Function (anonymous)],
    _mclBnFr_deserialize: [Function (anonymous)],
    _mclBnFr_isValid: [Function (anonymous)],
    _mclBnFr_isEqual: [Function (anonymous)],
    _mclBnFr_isZero: [Function (anonymous)],
    _mclBnFr_isOne: [Function (anonymous)],
    _mclBnFr_isOdd: [Function (anonymous)],
    _mclBnFr_isNegative: [Function (anonymous)],
    _mclBnFr_setByCSPRNG: [Function (anonymous)],
    _mclBnFp_setByCSPRNG: [Function (anonymous)],
    _mclBn_setRandFunc: [Function (anonymous)],
    _mclBnFr_setHashOf: [Function (anonymous)],
    _mclBnFr_getStr: [Function (anonymous)],
    _mclBnFr_serialize: [Function (anonymous)],
    _mclBnFr_neg: [Function (anonymous)],
    _mclBnFr_inv: [Function (anonymous)],
    _mclBnFr_sqr: [Function (anonymous)],
    _mclBnFr_add: [Function (anonymous)],
    _mclBnFr_sub: [Function (anonymous)],
    _mclBnFr_mul: [Function (anonymous)],
    _mclBnFr_div: [Function (anonymous)],
    _mclBnFp_neg: [Function (anonymous)],
    _mclBnFp_inv: [Function (anonymous)],
    _mclBnFp_sqr: [Function (anonymous)],
    _mclBnFp_add: [Function (anonymous)],
    _mclBnFp_sub: [Function (anonymous)],
    _mclBnFp_mul: [Function (anonymous)],
    _mclBnFp_div: [Function (anonymous)],
    _mclBnFp2_neg: [Function (anonymous)],
    _mclBnFp2_inv: [Function (anonymous)],
    _mclBnFp2_sqr: [Function (anonymous)],
    _mclBnFp2_add: [Function (anonymous)],
    _mclBnFp2_sub: [Function (anonymous)],
    _mclBnFp2_mul: [Function (anonymous)],
    _mclBnFp2_div: [Function (anonymous)],
    _mclBnFr_squareRoot: [Function (anonymous)],
    _mclBnFp_squareRoot: [Function (anonymous)],
    _mclBnFp2_squareRoot: [Function (anonymous)],
    _mclBnG1_clear: [Function (anonymous)],
    _mclBnG1_setStr: [Function (anonymous)],
    _mclBnG1_deserialize: [Function (anonymous)],
    _mclBnG1_isValid: [Function (anonymous)],
    _mclBnG1_isEqual: [Function (anonymous)],
    _mclBnG1_isZero: [Function (anonymous)],
    _mclBnG1_isValidOrder: [Function (anonymous)],
    _mclBnG1_hashAndMapTo: [Function (anonymous)],
    _mclBnG1_getStr: [Function (anonymous)],
    _mclBnG1_serialize: [Function (anonymous)],
    _mclBnG1_neg: [Function (anonymous)],
    _mclBnG1_dbl: [Function (anonymous)],
    _mclBnG1_normalize: [Function (anonymous)],
    _mclBnG1_add: [Function (anonymous)],
    _mclBnG1_sub: [Function (anonymous)],
    _mclBnG1_mul: [Function (anonymous)],
    _mclBnG1_mulCT: [Function (anonymous)],
    _mclBnG2_clear: [Function (anonymous)],
    _mclBnG2_setStr: [Function (anonymous)],
    _mclBnG2_deserialize: [Function (anonymous)],
    _mclBnG2_isValid: [Function (anonymous)],
    _mclBnG2_isEqual: [Function (anonymous)],
    _mclBnG2_isZero: [Function (anonymous)],
    _mclBnG2_isValidOrder: [Function (anonymous)],
    _mclBnG2_hashAndMapTo: [Function (anonymous)],
    _mclBnG2_getStr: [Function (anonymous)],
    _mclBnG2_serialize: [Function (anonymous)],
    _mclBnG2_neg: [Function (anonymous)],
    _mclBnG2_dbl: [Function (anonymous)],
    _mclBnG2_normalize: [Function (anonymous)],
    _mclBnG2_add: [Function (anonymous)],
    _mclBnG2_sub: [Function (anonymous)],
    _mclBnG2_mul: [Function (anonymous)],
    _mclBnG2_mulCT: [Function (anonymous)],
    _mclBnGT_clear: [Function (anonymous)],
    _mclBnGT_setInt: [Function (anonymous)],
    _mclBnGT_setInt32: [Function (anonymous)],
    _mclBnGT_setStr: [Function (anonymous)],
    _mclBnGT_deserialize: [Function (anonymous)],
    _mclBnGT_isEqual: [Function (anonymous)],
    _mclBnGT_isZero: [Function (anonymous)],
    _mclBnGT_isOne: [Function (anonymous)],
    _mclBnGT_getStr: [Function (anonymous)],
    _mclBnGT_serialize: [Function (anonymous)],
    _mclBnGT_neg: [Function (anonymous)],
    _mclBnGT_inv: [Function (anonymous)],
    _mclBnGT_invGeneric: [Function (anonymous)],
    _mclBnGT_sqr: [Function (anonymous)],
    _mclBnGT_add: [Function (anonymous)],
    _mclBnGT_sub: [Function (anonymous)],
    _mclBnGT_mul: [Function (anonymous)],
    _mclBnGT_div: [Function (anonymous)],
    _mclBnGT_pow: [Function (anonymous)],
    _mclBnGT_powGeneric: [Function (anonymous)],
    _mclBnG1_mulVec: [Function (anonymous)],
    _mclBnG2_mulVec: [Function (anonymous)],
    _mclBnGT_powVec: [Function (anonymous)],
    _mclBn_pairing: [Function (anonymous)],
    _mclBn_finalExp: [Function (anonymous)],
    _mclBn_millerLoop: [Function (anonymous)],
    _mclBn_millerLoopVec: [Function (anonymous)],
    _mclBn_getUint64NumToPrecompute: [Function (anonymous)],
    _mclBn_precomputeG2: [Function (anonymous)],
    _mclBn_precomputedMillerLoop: [Function (anonymous)],
    _mclBn_precomputedMillerLoop2: [Function (anonymous)],
    _mclBn_precomputedMillerLoop2mixed: [Function (anonymous)],
    _mclBn_FrLagrangeInterpolation: [Function (anonymous)],
    _mclBn_G1LagrangeInterpolation: [Function (anonymous)],
    _mclBn_G2LagrangeInterpolation: [Function (anonymous)],
    _mclBn_FrEvaluatePolynomial: [Function (anonymous)],
    _mclBn_G1EvaluatePolynomial: [Function (anonymous)],
    _mclBn_G2EvaluatePolynomial: [Function (anonymous)],
    _mclBn_verifyOrderG1: [Function (anonymous)],
    _mclBn_verifyOrderG2: [Function (anonymous)],
    _mclBnFp_setInt: [Function (anonymous)],
    _mclBnFp_setInt32: [Function (anonymous)],
    _mclBnFp_getStr: [Function (anonymous)],
    _mclBnFp_setStr: [Function (anonymous)],
    _mclBnFp_deserialize: [Function (anonymous)],
    _mclBnFp_serialize: [Function (anonymous)],
    _mclBnFp_clear: [Function (anonymous)],
    _mclBnFp_setLittleEndian: [Function (anonymous)],
    _mclBnFp_setLittleEndianMod: [Function (anonymous)],
    _mclBnFp_setBigEndianMod: [Function (anonymous)],
    _mclBnFp_getLittleEndian: [Function (anonymous)],
    _mclBnFp_isValid: [Function (anonymous)],
    _mclBnFp_isEqual: [Function (anonymous)],
    _mclBnFp_isZero: [Function (anonymous)],
    _mclBnFp_isOne: [Function (anonymous)],
    _mclBnFp_isOdd: [Function (anonymous)],
    _mclBnFp_isNegative: [Function (anonymous)],
    _mclBnFp_setHashOf: [Function (anonymous)],
    _mclBnFp_mapToG1: [Function (anonymous)],
    _mclBnFp2_deserialize: [Function (anonymous)],
    _mclBnFp2_serialize: [Function (anonymous)],
    _mclBnFp2_clear: [Function (anonymous)],
    _mclBnFp2_isEqual: [Function (anonymous)],
    _mclBnFp2_isZero: [Function (anonymous)],
    _mclBnFp2_isOne: [Function (anonymous)],
    _mclBnFp2_mapToG2: [Function (anonymous)],
    _mclBnG1_getBasePoint: [Function (anonymous)],
    run: [Function: run],
    asm: [Object: null prototype] {
      d: Memory [WebAssembly.Memory] {},
      e: [Function: 108],
      f: Table [WebAssembly.Table] {},
      g: [Function: 411],
      h: [Function: 410],
      i: [Function: 409],
      j: [Function: 408],
      k: [Function: 398],
      l: [Function: 397],
      m: [Function: 171],
      n: [Function: 171],
      o: [Function: 395],
      p: [Function: 394],
      q: [Function: 393],
      r: [Function: 392],
      s: [Function: 391],
      t: [Function: 390],
      u: [Function: 389],
      v: [Function: 170],
      w: [Function: 170],
      x: [Function: 387],
      y: [Function: 386],
      z: [Function: 385],
      A: [Function: 384],
      B: [Function: 383],
      C: [Function: 381],
      D: [Function: 380],
      E: [Function: 379],
      F: [Function: 378],
      G: [Function: 377],
      H: [Function: 376],
      I: [Function: 375],
      J: [Function: 374],
      K: [Function: 373],
      L: [Function: 372],
      M: [Function: 370],
      N: [Function: 369],
      O: [Function: 368],
      P: [Function: 367],
      Q: [Function: 366],
      R: [Function: 365],
      S: [Function: 364],
      T: [Function: 363],
      U: [Function: 362],
      V: [Function: 360],
      W: [Function: 359],
      X: [Function: 358],
      Y: [Function: 357],
      Z: [Function: 356],
      _: [Function: 355],
      '$': [Function: 354],
      aa: [Function: 353],
      ba: [Function: 352],
      ca: [Function: 351],
      da: [Function: 349],
      ea: [Function: 348],
      fa: [Function: 347],
      ga: [Function: 346],
      ha: [Function: 345],
      ia: [Function: 344],
      ja: [Function: 343],
      ka: [Function: 342],
      la: [Function: 340],
      ma: [Function: 339],
      na: [Function: 338],
      oa: [Function: 337],
      pa: [Function: 336],
      qa: [Function: 335],
      ra: [Function: 334],
      sa: [Function: 333],
      ta: [Function: 332],
      ua: [Function: 331],
      va: [Function: 329],
      wa: [Function: 328],
      xa: [Function: 327],
      ya: [Function: 326],
      za: [Function: 324],
      Aa: [Function: 323],
      Ba: [Function: 322],
      Ca: [Function: 157],
      Da: [Function: 321],
      Ea: [Function: 320],
      Fa: [Function: 155],
      Ga: [Function: 318],
      Ha: [Function: 317],
      Ia: [Function: 316],
      Ja: [Function: 315],
      Ka: [Function: 313],
      La: [Function: 312],
      Ma: [Function: 311],
      Na: [Function: 310],
      Oa: [Function: 308],
      Pa: [Function: 307],
      Qa: [Function: 306],
      Ra: [Function: 305],
      Sa: [Function: 304],
      Ta: [Function: 303],
      Ua: [Function: 148],
      Va: [Function: 148],
      Wa: [Function: 302],
      Xa: [Function: 301],
      Ya: [Function: 300],
      Za: [Function: 299],
      _a: [Function: 297],
      '$a': [Function: 296],
      ab: [Function: 295],
      bb: [Function: 294],
      cb: [Function: 293],
      db: [Function: 292],
      eb: [Function: 290],
      fb: [Function: 289],
      gb: [Function: 288],
      hb: [Function: 287],
      ib: [Function: 286],
      jb: [Function: 285],
      kb: [Function: 284],
      lb: [Function: 283],
      mb: [Function: 282],
      nb: [Function: 281],
      ob: [Function: 280],
      pb: [Function: 279],
      qb: [Function: 278],
      rb: [Function: 277],
      sb: [Function: 276],
      tb: [Function: 275],
      ub: [Function: 274],
      vb: [Function: 273],
      wb: [Function: 272],
      xb: [Function: 271],
      yb: [Function: 270],
      zb: [Function: 269],
      Ab: [Function: 268],
      Bb: [Function: 267],
      Cb: [Function: 266],
      Db: [Function: 265],
      Eb: [Function: 264],
      Fb: [Function: 139],
      Gb: [Function: 139],
      Hb: [Function: 263],
      Ib: [Function: 262],
      Jb: [Function: 261],
      Kb: [Function: 260],
      Lb: [Function: 259],
      Mb: [Function: 258],
      Nb: [Function: 256],
      Ob: [Function: 255],
      Pb: [Function: 254],
      Qb: [Function: 253],
      Rb: [Function: 252],
      Sb: [Function: 251],
      Tb: [Function: 250],
      Ub: [Function: 249],
      Vb: [Function: 100],
      Wb: [Function: 248],
      Xb: [Function: 247],
      Yb: [Function: 246],
      Zb: [Function: 245],
      _b: [Function: 244],
      '$b': [Function: 243],
      ac: [Function: 242],
      bc: [Function: 241],
      cc: [Function: 240],
      dc: [Function: 239]
    },
    HEAP8: Int8Array(16777216) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 16777116 more items
    ],
    HEAP16: Int16Array(8388608) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 8388508 more items
    ],
    HEAP32: Int32Array(4194304) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 4194204 more items
    ],
    HEAPU8: Uint8Array(16777216) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 16777116 more items
    ],
    HEAPU16: Uint16Array(8388608) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 8388508 more items
    ],
    HEAPU32: Uint32Array(4194304) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 4194204 more items
    ],
    HEAPF32: Float32Array(4194304) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 4194204 more items
    ],
    HEAPF64: Float64Array(2097152) [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0,
      ... 2097052 more items
    ],
    calledRun: true,
    mclBnFr_malloc: [Function (anonymous)],
    mclBnFr_setLittleEndian: [Function (anonymous)],
    mclBnFr_setLittleEndianMod: [Function (anonymous)],
    mclBnFr_setBigEndianMod: [Function (anonymous)],
    mclBnFr_setStr: [Function (anonymous)],
    mclBnFr_getStr: [Function (anonymous)],
    mclBnFr_deserialize: [Function (anonymous)],
    mclBnFr_serialize: [Function (anonymous)],
    mclBnFr_setHashOf: [Function (anonymous)],
    mclBnFp_malloc: [Function (anonymous)],
    mclBnFp_setLittleEndian: [Function (anonymous)],
    mclBnFp_setLittleEndianMod: [Function (anonymous)],
    mclBnFp_setBigEndianMod: [Function (anonymous)],
    mclBnFp_setStr: [Function (anonymous)],
    mclBnFp_getStr: [Function (anonymous)],
    mclBnFp_deserialize: [Function (anonymous)],
    mclBnFp_serialize: [Function (anonymous)],
    mclBnFp_setHashOf: [Function (anonymous)],
    mclBnFp2_malloc: [Function (anonymous)],
    mclBnFp2_deserialize: [Function (anonymous)],
    mclBnFp2_serialize: [Function (anonymous)],
    mclBnG1_malloc: [Function (anonymous)],
    mclBnG1_setStr: [Function (anonymous)],
    mclBnG1_getStr: [Function (anonymous)],
    mclBnG1_deserialize: [Function (anonymous)],
    mclBnG1_serialize: [Function (anonymous)],
    mclBnG1_hashAndMapTo: [Function (anonymous)],
    mclBnG2_malloc: [Function (anonymous)],
    mclBnG2_setStr: [Function (anonymous)],
    mclBnG2_getStr: [Function (anonymous)],
    mclBnG2_deserialize: [Function (anonymous)],
    mclBnG2_serialize: [Function (anonymous)],
    mclBnG2_hashAndMapTo: [Function (anonymous)],
    mclBnGT_malloc: [Function (anonymous)],
    mclBnGT_deserialize: [Function (anonymous)],
    mclBnGT_serialize: [Function (anonymous)],
    mclBnGT_setStr: [Function (anonymous)],
    mclBnGT_getStr: [Function (anonymous)]
  },
  toHex: [Function (anonymous)],
  toHexStr: [Function (anonymous)],
  fromHexStr: [Function (anonymous)],
  free: [Function (anonymous)],
  Fr: [class (anonymous) extends Common],
  deserializeHexStrToFr: [Function (anonymous)],
  Fp: [class (anonymous) extends Common],
  deserializeHexStrToFp: [Function (anonymous)],
  Fp2: [class (anonymous) extends Common],
  deserializeHexStrToFp2: [Function (anonymous)],
  G1: [class (anonymous) extends Common],
  deserializeHexStrToG1: [Function (anonymous)],
  setETHserialization: [Function (anonymous)],
  setMapToMode: [Function (anonymous)],
  verifyOrderG1: [Function (anonymous)],
  verifyOrderG2: [Function (anonymous)],
  getBasePointG1: [Function (anonymous)],
  G2: [class (anonymous) extends Common],
  deserializeHexStrToG2: [Function (anonymous)],
  GT: [class (anonymous) extends Common],
  deserializeHexStrToGT: [Function (anonymous)],
  PrecomputedG2: [class (anonymous)],
  neg: [Function (anonymous)],
  sqr: [Function (anonymous)],
  inv: [Function (anonymous)],
  normalize: [Function (anonymous)],
  add: [Function (anonymous)],
  sub: [Function (anonymous)],
  mul: [Function (anonymous)],
  mulVec: [Function (anonymous)],
  div: [Function (anonymous)],
  dbl: [Function (anonymous)],
  hashToFr: [Function (anonymous)],
  hashAndMapToG1: [Function (anonymous)],
  hashAndMapToG2: [Function (anonymous)],
  pow: [Function (anonymous)],
  pairing: [Function (anonymous)],
  millerLoop: [Function (anonymous)],
  precomputedMillerLoop: [Function (anonymous)],
  precomputedMillerLoop2: [Function (anonymous)],
  precomputedMillerLoop2mixed: [Function (anonymous)],
  finalExp: [Function (anonymous)]
}
